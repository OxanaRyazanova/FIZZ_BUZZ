CLASS zro_cl_fizzbuzz DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    TYPES:BEGIN OF ts_converted_number,
            number           TYPE int1,
            converted_number TYPE string,
          END OF ts_converted_number,
          tt_converted_number TYPE STANDARD TABLE OF ts_converted_number WITH DEFAULT KEY.

    METHODS convert IMPORTING number        TYPE int1
                    RETURNING VALUE(result) TYPE tt_converted_number.

  PROTECTED SECTION.

  PRIVATE SECTION.
    CONSTANTS: fizz TYPE string VALUE 'Fizz',
               buzz TYPE string VALUE 'Buzz'.
    METHODS: convert_number IMPORTING number        TYPE int1
                            RETURNING VALUE(result) TYPE string,
      is_num_dividable_by_3 IMPORTING number        TYPE int1
                            RETURNING VALUE(result) TYPE abap_boolean,
      is_num_dividable_by_5 IMPORTING number        TYPE int1
                            RETURNING VALUE(result) TYPE abap_boolean.
ENDCLASS.

CLASS zro_cl_fizzbuzz IMPLEMENTATION.

  METHOD convert.
    DO number TIMES.
      APPEND VALUE #( number = sy-index converted_number = convert_number( CONV #( sy-index ) ) ) TO result.
    ENDDO.
  ENDMETHOD.

  METHOD convert_number.
    result = COND #( WHEN is_num_dividable_by_3( number ) AND is_num_dividable_by_5( number ) THEN |{ fizz }{ buzz }|
                     WHEN is_num_dividable_by_3( number )                                     THEN |{ fizz }|
                     WHEN is_num_dividable_by_5( number )                                     THEN |{ buzz }|
                     ELSE condense( CONV string( number ) ) ).
  ENDMETHOD.

  METHOD is_num_dividable_by_3.
    result = xsdbool( number MOD 3 = 0 ).
  ENDMETHOD.
  METHOD is_num_dividable_by_5.
    result = xsdbool( number MOD 5 = 0 ).
  ENDMETHOD.

ENDCLASS.